{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","json2tree","root","item","mapper","endsWith","slice","key","hasOwnProperty","default"],"mappings":"AAAA;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA;;;;;;;;;;AAUA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuC;AACnC,QAAIF,KAAKG,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACpBH,eAAOA,KAAKI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACH;AACD,QAAI,QAAQH,IAAR,yCAAQA,IAAR,OAAkB,QAAlB,IAA8BA,SAAS,IAA3C,EAAiD;AAC7C,aAAK,IAAMI,GAAX,IAAkBJ,IAAlB,EAAwB;AACpB,gBAAIA,KAAKK,cAAL,CAAoBD,GAApB,CAAJ,EAA8B;AAC1B,oBAAI,CAACN,UAAaC,IAAb,SAAqBK,GAArB,EAA4BJ,KAAKI,GAAL,CAA5B,EAAuCH,MAAvC,CAAL,EAAqD;AACjD,2BAAO,KAAP;AACH;AACJ;AACJ;AACD,eAAO,IAAP;AACH,KATD,MAUK;AACD,eAAOA,OAAOF,IAAP,EAAaC,IAAb,MAAuB,KAA9B;AACH;AACJ;AACDJ,QAAQE,SAAR,GAAoBA,SAApB;AACAF,QAAQU,OAAR,GAAkBR,SAAlB","file":"index.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Maps recursively a JSON-like object via a `mapper` function, until the\n * object is completely mapped, or the `mapper` returns `false`.\n *\n * @param root a root level location to map to\n * @param item any object the mapper can map to\n * @param mapper a mapper returning possibly false\n *\n * @returns true upon complete a mapping, otherwise false\n */\nfunction json2tree(root, item, mapper) {\n    if (root.endsWith(\"/\")) {\n        root = root.slice(0, -1);\n    }\n    if (typeof (item) === \"object\" && item !== null) {\n        for (const key in item) {\n            if (item.hasOwnProperty(key)) {\n                if (!json2tree(`${root}/${key}`, item[key], mapper)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    else {\n        return mapper(root, item) !== false;\n    }\n}\nexports.json2tree = json2tree;\nexports.default = json2tree;\n"]}